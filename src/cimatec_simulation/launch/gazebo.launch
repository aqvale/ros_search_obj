<?xml version="1.0"?>
<launch>

  <include file="$(find bir_cimatec4_map)/launch/gazebo.launch">
  </include>
  
  <!-- Import files .py -->
  <node pkg="cimatec_simulation" name="opencv_camera" type="camera.py" output="screen" />
  <node pkg="cimatec_simulation" name="robot_vision" type="robot.py" output="screen" />
  
  <!-- <arg name="world_name" default="$(find cimatec_simulation)/worlds/cimatec_world.world"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include> -->

  <!-- Husky -->
  <arg name="laser_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>
  <arg name="urdf_extras" default="$(find cimatec_simulation)/urdf/main.urdf.xacro"/>
  <arg name="x" default="45.0"/>
  <arg name="y" default="-2.0"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="3.1415"/>

  <include file="$(find cimatec_simulation)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="urdf_extras" default="$(arg urdf_extras)"/>
    <arg name="x" default="$(arg x)"/>
    <arg name="y" default="$(arg y)"/>
    <arg name="z" default="$(arg z)"/>
    <arg name="yaw" default="$(arg yaw)"/>
  </include>

  <include file="$(find husky_navigation)/launch/move_base.launch">
    <!-- <arg name="no_static_map" value="true"/> -->
  </include>

  <!-- Navigation -->
  <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

  <node name="Operator" pkg="nav2d_operator" type="operator" >
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node> 

  <node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

  <node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
  <node name="Explore" pkg="nav2d_navigator" type="explore_client" />
  <node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" /> 


  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/velodyne_points"/>
    <rosparam>
        target_frame: velodyne # Leave disabled to output scan in pointcloud frame
        transform_tolerance: 0.01
        min_height: -0.45
        <!-- max_height: 2.0 -->
        <!-- angle_min: -M_PI -->
        <!-- angle_max: M_PI -->
        <!-- angle_increment: 0.0087 # M_PI/360.0 -->
        <!-- scan_time: 0.3333 -->
        <!-- range_min: 0.45 -->
        <!-- range_max: 130.0 -->
        <!-- use_inf: true -->
        <!-- inf_epsilon: 1.0 -->
        # Concurrency level, affects number of pointclouds queued for processing and number of threads used
        # 0 : Detect number of cores
        # 1 : Single threaded
        # 2->inf : Parallelism level
        concurrency_level: 0
    </rosparam>
  </node>

  <!-- - Run gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
    <rosparam>
      odom_frame: odom
      base_frame: base_link
      map_frame: map
      map_update_interval: 0.5 # Publish new map
      maxUrange: 30 # Should be just less than sensor range
      maxRange: 60 # Should be just greater than sensor range
      particles: 40 # Increased from 80
      
      # Update frequencies
      linearUpdate: 0.1 #0.3
      angularUpdate: 0.1 #0.5
      temporalUpdate: 2.0
      resampleThreshold: 0.5
      
      # Initial Map Size
      xmin: -200.0
      ymin: -200.0
      xmax: 200.0
      ymax: 200.0
      delta: 0.05
      
      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005
    </rosparam>
  </node>

  <!-- RViz -->
  <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find cimatec_simulation)/rviz/config.rviz" />
</launch>
